CC = gcc
CFLAGS = -Wall -Wextra -Werror

DIR_SRC = ./src
DIR_OBJ = ./obj
DIR_BIN = ./bin

SIMULATOR = $(addprefix $(DIR_BIN)/,simulator.out)
ASSEMBLER = $(addprefix $(DIR_BIN)/,assembler.out)
PASS1 = $(addprefix $(DIR_BIN)/,pass1.debug)

DIR_ASSEMBLER_SRC = $(addprefix $(DIR_SRC),/assembler)
DIR_ASSEMBLER_OBJECTS = $(addprefix $(DIR_OBJ),/assembler)

DIR_SIMULATOR_SRC = $(addprefix $(DIR_SRC),/simulator)
DIR_SIMULATOR_OBJECTS = $(addprefix $(DIR_OBJ),/simulator)

DIR_EXTRAS_SRC = $(addprefix $(DIR_SRC),/extras)

ASSEMBLER_SOURCES = $(wildcard $(DIR_ASSEMBLER_SRC)/*.c)
ASSEMBLER_OBJECTS = $(patsubst $(DIR_ASSEMBLER_SRC)/%.c,$(DIR_ASSEMBLER_OBJECTS)/%.o, $(ASSEMBLER_SOURCES))
ASSEMBLER_HEADERS = $(wildcard $(DIR_ASSEMBLER_SRC)/*.h)

SIMULATOR_SOURCES = $(wildcard $(DIR_SIMULATOR_SRC)/*.c)
SIMULATOR_OBJECTS = $(patsubst $(DIR_SIMULATOR_SRC)/%.c,$(DIR_SIMULATOR_OBJECTS)/%.o, $(SIMULATOR_SOURCES))
SIMULATOR_HEADERS = $(wildcard $(DIR_SIMULATOR_SRC)/*.h)

EXTRAS_SOURCES = $(wildcard $(DIR_EXTRAS_SRC)/*.c)
EXTRAS_OBJECTS = $(patsubst $(DIR_EXTRAS_SRC)/%.c, $(DIR_BIN)/%.out, $(EXTRAS_SOURCES))

DIRS = $(DIR_ASSEMBLER_OBJECTS) $(DIR_ASSEMBLER_SRC) $(DIR_BIN) $(DIR_OBJ) $(DIR_SIMULATOR_OBJECTS) $(DIR_SIMULATOR_SRC) $(DIR_SRC)

all: $(DIRS) $(ASSEMBLER) $(PASS1) $(SIMULATOR) $(EXTRAS_OBJECTS)

$(ASSEMBLER): $(ASSEMBLER_OBJECTS)
	$(CC) $(ASSEMBLER_OBJECTS) -o $(ASSEMBLER)

$(SIMULATOR): $(SIMULATOR_OBJECTS)
	$(CC) $(SIMULATOR_OBJECTS) -o $(SIMULATOR)


$(DIR_ASSEMBLER_OBJECTS)/%.o:$(DIR_ASSEMBLER_SRC)/%.c $(ASSEMBLER_HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@

$(DIR_SIMULATOR_OBJECTS)/%.o:$(DIR_SIMULATOR_SRC)/%.c $(SIMULATOR_HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@

$(PASS1): $(DIR_ASSEMBLER_SRC)/pass1.c $(DIR_ASSEMBLER_SRC)/misc.c

$(DIRS): 
	mkdir -p $@

$(DIR_BIN)/%.out: $(DIR_EXTRAS_SRC)/%.c
	$(CC) $(CFLAGS) $< -o $@

clean:
	rm  -f $(DIR_BIN)/*
	rm -f $(DIR_SIMULATOR_OBJECTS)/*
	rm -f $(DIR_ASSEMBLER_OBJECTS)/*